"use strict";

/**
 * Client-side script for File Analyzer
 * @function uploader-client
 * @see file-analyzer
 */
var uploaderClient = function uploaderClient() {
  var formObj = document.querySelector('#form');
  var fileObj = document.querySelector('#selector');
  var apiUrl = window.location.href + '/api/v1/findsize'; // Manual AJAX request with form data

  var ajaxRequest = function ajaxRequest(method, url, callback) {
    var xmlhttp = new XMLHttpRequest(); // Need to override the form submit
    // https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/Forms/Sending_forms_through_JavaScript

    var FD = new FormData(formObj);

    xmlhttp.onreadystatechange = function () {
      if (xmlhttp.readyState === 4 && xmlhttp.status === 200) {
        callback(xmlhttp.response);
      }
    };

    xmlhttp.open(method, url, true);
    xmlhttp.send(FD);
  };

  var makeRequest = function makeRequest() {
    if (fileObj.value) {
      ajaxRequest('POST', apiUrl, function (data) {
        // alert('File Size -- ' + data);
        document.write('File Size -- ' + data);
      });
    }
  }; // Override form's submit event to make custom request


  formObj.onsubmit = function (event) {
    event.preventDefault();
    makeRequest();
    return false;
  };
};

window.addEventListener('load', function () {
  uploaderClient();
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy92aWV3cy9zdGF0aWNfZmlsZXMvanMvdXBsb2FkZXItY2xpZW50LmpzIl0sIm5hbWVzIjpbInVwbG9hZGVyQ2xpZW50IiwiZm9ybU9iaiIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImZpbGVPYmoiLCJhcGlVcmwiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsImhyZWYiLCJhamF4UmVxdWVzdCIsIm1ldGhvZCIsInVybCIsImNhbGxiYWNrIiwieG1saHR0cCIsIlhNTEh0dHBSZXF1ZXN0IiwiRkQiLCJGb3JtRGF0YSIsIm9ucmVhZHlzdGF0ZWNoYW5nZSIsInJlYWR5U3RhdGUiLCJzdGF0dXMiLCJyZXNwb25zZSIsIm9wZW4iLCJzZW5kIiwibWFrZVJlcXVlc3QiLCJ2YWx1ZSIsImRhdGEiLCJ3cml0ZSIsIm9uc3VibWl0IiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsImFkZEV2ZW50TGlzdGVuZXIiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQU1BLGNBQWMsR0FBRyxTQUFqQkEsY0FBaUIsR0FBTTtBQUMzQixNQUFNQyxPQUFPLEdBQUdDLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixPQUF2QixDQUFoQjtBQUNBLE1BQU1DLE9BQU8sR0FBR0YsUUFBUSxDQUFDQyxhQUFULENBQXVCLFdBQXZCLENBQWhCO0FBQ0EsTUFBSUUsTUFBTSxHQUFHQyxNQUFNLENBQUNDLFFBQVAsQ0FBZ0JDLElBQWhCLEdBQXVCLGtCQUFwQyxDQUgyQixDQUszQjs7QUFDQSxNQUFNQyxXQUFXLEdBQUcsU0FBZEEsV0FBYyxDQUFDQyxNQUFELEVBQVNDLEdBQVQsRUFBY0MsUUFBZCxFQUEyQjtBQUM3QyxRQUFNQyxPQUFPLEdBQUcsSUFBSUMsY0FBSixFQUFoQixDQUQ2QyxDQUc3QztBQUNBOztBQUNBLFFBQU1DLEVBQUUsR0FBRyxJQUFJQyxRQUFKLENBQWFmLE9BQWIsQ0FBWDs7QUFFQVksSUFBQUEsT0FBTyxDQUFDSSxrQkFBUixHQUE2QixZQUFNO0FBQ2pDLFVBQUlKLE9BQU8sQ0FBQ0ssVUFBUixLQUF1QixDQUF2QixJQUE0QkwsT0FBTyxDQUFDTSxNQUFSLEtBQW1CLEdBQW5ELEVBQXdEO0FBQ3REUCxRQUFBQSxRQUFRLENBQUNDLE9BQU8sQ0FBQ08sUUFBVCxDQUFSO0FBQ0Q7QUFDRixLQUpEOztBQUtBUCxJQUFBQSxPQUFPLENBQUNRLElBQVIsQ0FBYVgsTUFBYixFQUFxQkMsR0FBckIsRUFBMEIsSUFBMUI7QUFDQUUsSUFBQUEsT0FBTyxDQUFDUyxJQUFSLENBQWFQLEVBQWI7QUFDRCxHQWREOztBQWdCQSxNQUFNUSxXQUFXLEdBQUcsU0FBZEEsV0FBYyxHQUFNO0FBQ3hCLFFBQUluQixPQUFPLENBQUNvQixLQUFaLEVBQW1CO0FBQ2pCZixNQUFBQSxXQUFXLENBQUMsTUFBRCxFQUFTSixNQUFULEVBQWlCLFVBQUNvQixJQUFELEVBQVU7QUFDcEM7QUFDQXZCLFFBQUFBLFFBQVEsQ0FBQ3dCLEtBQVQsQ0FBZSxrQkFBa0JELElBQWpDO0FBQ0QsT0FIVSxDQUFYO0FBSUQ7QUFDRixHQVBELENBdEIyQixDQStCM0I7OztBQUNBeEIsRUFBQUEsT0FBTyxDQUFDMEIsUUFBUixHQUFtQixVQUFDQyxLQUFELEVBQVc7QUFDNUJBLElBQUFBLEtBQUssQ0FBQ0MsY0FBTjtBQUNBTixJQUFBQSxXQUFXO0FBQ1gsV0FBTyxLQUFQO0FBQ0QsR0FKRDtBQUtELENBckNEOztBQXVDQWpCLE1BQU0sQ0FBQ3dCLGdCQUFQLENBQXdCLE1BQXhCLEVBQWdDLFlBQU07QUFDcEM5QixFQUFBQSxjQUFjO0FBQ2YsQ0FGRCIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ2xpZW50LXNpZGUgc2NyaXB0IGZvciBGaWxlIEFuYWx5emVyXG4gKiBAZnVuY3Rpb24gdXBsb2FkZXItY2xpZW50XG4gKiBAc2VlIGZpbGUtYW5hbHl6ZXJcbiAqL1xuY29uc3QgdXBsb2FkZXJDbGllbnQgPSAoKSA9PiB7XG4gIGNvbnN0IGZvcm1PYmogPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZm9ybScpO1xuICBjb25zdCBmaWxlT2JqID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3NlbGVjdG9yJyk7XG4gIGxldCBhcGlVcmwgPSB3aW5kb3cubG9jYXRpb24uaHJlZiArICcvYXBpL3YxL2ZpbmRzaXplJztcblxuICAvLyBNYW51YWwgQUpBWCByZXF1ZXN0IHdpdGggZm9ybSBkYXRhXG4gIGNvbnN0IGFqYXhSZXF1ZXN0ID0gKG1ldGhvZCwgdXJsLCBjYWxsYmFjaykgPT4ge1xuICAgIGNvbnN0IHhtbGh0dHAgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcblxuICAgIC8vIE5lZWQgdG8gb3ZlcnJpZGUgdGhlIGZvcm0gc3VibWl0XG4gICAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvR3VpZGUvSFRNTC9Gb3Jtcy9TZW5kaW5nX2Zvcm1zX3Rocm91Z2hfSmF2YVNjcmlwdFxuICAgIGNvbnN0IEZEID0gbmV3IEZvcm1EYXRhKGZvcm1PYmopO1xuXG4gICAgeG1saHR0cC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSAoKSA9PiB7XG4gICAgICBpZiAoeG1saHR0cC5yZWFkeVN0YXRlID09PSA0ICYmIHhtbGh0dHAuc3RhdHVzID09PSAyMDApIHtcbiAgICAgICAgY2FsbGJhY2soeG1saHR0cC5yZXNwb25zZSk7XG4gICAgICB9XG4gICAgfTtcbiAgICB4bWxodHRwLm9wZW4obWV0aG9kLCB1cmwsIHRydWUpO1xuICAgIHhtbGh0dHAuc2VuZChGRCk7XG4gIH1cblxuICBjb25zdCBtYWtlUmVxdWVzdCA9ICgpID0+IHtcbiAgICBpZiAoZmlsZU9iai52YWx1ZSkge1xuICAgICAgYWpheFJlcXVlc3QoJ1BPU1QnLCBhcGlVcmwsIChkYXRhKSA9PiB7XG4gICAgICAgIC8vIGFsZXJ0KCdGaWxlIFNpemUgLS0gJyArIGRhdGEpO1xuICAgICAgICBkb2N1bWVudC53cml0ZSgnRmlsZSBTaXplIC0tICcgKyBkYXRhKVxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgLy8gT3ZlcnJpZGUgZm9ybSdzIHN1Ym1pdCBldmVudCB0byBtYWtlIGN1c3RvbSByZXF1ZXN0XG4gIGZvcm1PYmoub25zdWJtaXQgPSAoZXZlbnQpID0+IHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIG1ha2VSZXF1ZXN0KCk7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9O1xufTtcblxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCAoKSA9PiB7XG4gIHVwbG9hZGVyQ2xpZW50KCk7XG59KTtcbiJdfQ==